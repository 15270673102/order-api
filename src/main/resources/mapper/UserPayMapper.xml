<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.loushi.mapper.UserPayMapper">

    <resultMap id="BaseResultMap" type="com.loushi.model.UserPay">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="pay_no" property="payNo" jdbcType="VARCHAR"/>
        <result column="order_id" property="orderId" jdbcType="INTEGER"/>
        <result column="money" property="money" jdbcType="DOUBLE"/>
        <result column="pay_time" property="payTime" jdbcType="TIMESTAMP"/>
        <result column="pay_status" property="payStatus" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, pay_no, order_id, money, pay_time, pay_status, create_time
  </sql>


    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user_pay
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="remitRecordList" resultType="com.loushi.vo.order.RemitRecordListVO">
        SELECT SUBSTRING(p.pay_time, 1, 10) as dateTime,
               SUM(p.money)                as totleMoney
        FROM user_order AS uo
                 JOIN user_pay AS p ON uo.id = p.order_id
        WHERE p.pay_status = #{orderPayStatus} and uo.user_id = #{uid}
        GROUP BY SUBSTRING(p.pay_time, 1, 10)
        order by p.pay_time desc
    </select>
    <select id="selectByUidTime" resultType="com.loushi.vo.order.CommissionListVO">
       SELECT
            uo.task_id as taskId,
            uo.check_time as checkTime,
            up.money as money,
            up.pay_status as payStatus
        FROM
            user_order AS uo
            JOIN user_pay AS up ON uo.id = up.order_id
        WHERE
        uo.user_id = #{uid}
        AND DATE_FORMAT( up.create_time, '%Y-%m' ) = #{filterTime}
        ORDER BY up.create_time DESC
    </select>
    <select id="selectByOrderId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_pay
        where order_id = #{orderId}
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_pay
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.loushi.model.UserPay" useGeneratedKeys="true" keyProperty="id">
    insert into user_pay (pay_no, order_id, money, 
      pay_time, pay_status, create_time
      )
    values (#{payNo,jdbcType=VARCHAR}, #{orderId,jdbcType=INTEGER}, #{money,jdbcType=DOUBLE}, 
      #{payTime,jdbcType=TIMESTAMP}, #{payStatus,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.loushi.model.UserPay" useGeneratedKeys="true" keyProperty="id">
        insert into user_pay
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="payNo != null">
                pay_no,
            </if>
            <if test="orderId != null">
                order_id,
            </if>
            <if test="money != null">
                money,
            </if>
            <if test="payTime != null">
                pay_time,
            </if>
            <if test="payStatus != null">
                pay_status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="payNo != null">
                #{payNo,jdbcType=VARCHAR},
            </if>
            <if test="orderId != null">
                #{orderId,jdbcType=INTEGER},
            </if>
            <if test="money != null">
                #{money,jdbcType=DOUBLE},
            </if>
            <if test="payTime != null">
                #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="payStatus != null">
                #{payStatus,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.loushi.model.UserPay">
        update user_pay
        <set>
            <if test="payNo != null">
                pay_no = #{payNo,jdbcType=VARCHAR},
            </if>
            <if test="orderId != null">
                order_id = #{orderId,jdbcType=INTEGER},
            </if>
            <if test="money != null">
                money = #{money,jdbcType=DOUBLE},
            </if>
            <if test="payTime != null">
                pay_time = #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="payStatus != null">
                pay_status = #{payStatus,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.loushi.model.UserPay">
    update user_pay
    set pay_no = #{payNo,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=INTEGER},
      money = #{money,jdbcType=DOUBLE},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      pay_status = #{payStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>